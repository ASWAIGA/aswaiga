openapi: 3.0.3
info:
  title: ASWAIGA
  description: |-
    Aqui va la descripcion

    Some useful links:
    - [The ASWAIGA repository](https://github.com/ASWAIGA/aswaiga)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://44.197.133.25:8080
tags:
  - name: comments
paths:
  /comments/{id}:
    get:
      tags:
        - comments
      summary: Comments of an issue
      description: Show the comments of an issue
      operationId: showComments
      parameters:
        - name: id
          in: path
          description: ID of the issue you want to see the comments from
          required: true
          schema:
            type: integer

      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/showComments'
        '401':
          description: 'Error: Unauthorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
              examples:
                errorExample:
                  $ref: '#/components/examples/error401'
        '403':
          description: 'Error: Forbidden'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
              examples:
                errorExample:
                  $ref: '#/components/examples/error403'
        '404':
          description: 'Error: Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
              examples:
                errorExample:
                  $ref: '#/components/examples/error404'
        '409':
          description: 'Conflict with the operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
              examples:
                errorExample:
                  $ref: '#/components/examples/error409'
components:
  schemas:
    ErrorResult:
        type: object
        properties:
          status:
            type: integer
            enum: [304, 400, 401, 403, 404, 409]
          error:
            type: string
            enum: ["Not Modified", "Bad Request", "Unauthorized", "Forbidden", "Not Found", "Conflict"]
          message:
            type: string

    showComments:
      type: object
      properties:
        issue_id:
          type: integer
        user_name:
          type: string
        text:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        "comment": {
          "issue_id": 1,
          "user_full_name": "Joel",
          "text": "Intentar√© arreglarlo",
        }

  examples:
    error304:
      value:
        status: 304
        error: "Not Modified"
        message: "You have already made this action. You can not do it twice."
    error400:
      value:
        status: 400
        error: "Bad Request"
        message: "Bad Request"
    error401:
      value:
        status: 401
        error: "Unauthorized"
        message: "No Api Key provided"
    error403:
      value:
        status: 403
        error: "Forbidden"
        message: "Forbidden behaviour for that user"
    error404:
      value:
        status: 404
        error: "Not Found"
        message: "No object with that ID"
    error409:
      value:
        status: 409
        error: "Conflict"
        message: "Conflict with the operation"

  securitySchemes:
    apiKey:
      type: apiKey
      name: X-API-KEY #Custom headers in rails apps must have the X- prefix
      in: header